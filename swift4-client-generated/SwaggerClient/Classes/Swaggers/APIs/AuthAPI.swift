//
// AuthAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class AuthAPI {
    /**
     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiAuthPost(body: AuthorizeRequest? = nil, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        apiAuthPostWithRequestBuilder(body: body).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     - POST /api/Auth
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func apiAuthPostWithRequestBuilder(body: AuthorizeRequest? = nil) -> RequestBuilder<Void> {
        let path = "/api/Auth"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiAuthTestGet(completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        apiAuthTestGetWithRequestBuilder().execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     - GET /api/Auth/test

     - returns: RequestBuilder<Void> 
     */
    open class func apiAuthTestGetWithRequestBuilder() -> RequestBuilder<Void> {
        let path = "/api/Auth/test"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
